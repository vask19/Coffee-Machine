type: edu
custom_name: stage3
files:
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;


    class TestClue {
        boolean cond;
        int num;
        boolean showTests;
        TestClue(boolean c, int n, boolean showTests) {
            cond = c;
            num = n;
            this.showTests = showTests;
        }
    }

    public class CoffeeMachineTest extends StageTest<TestClue> {

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, true))
                    .setInput("300\n65\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("600\n153\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n150\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n1500\n45\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, true))
                    .setInput("599\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 867, true))
                    .setInput( "345640\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 1548, true))
                    .setInput("345640\n434230\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 172, true))
                    .setInput( "34564\n43423\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, false))
                    .setInput("399\n112\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 3, false))
                    .setInput("2400\n249\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1, false))
                    .setInput("1400\n1500\n44\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, false))
                    .setInput("500\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 171, false))
                    .setInput("34564\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1547, false))
                    .setInput("345640\n434230\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 868, false))
                    .setInput("345640\n43423\n23234\n19246")

            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.trim().split(":");

            if (lines.length <= 1) {
                return CheckResult.wrong("Looks like you didn't print anything!");
            }

            String userOutput = lines[lines.length - 1].trim();
            String loweredOutput = userOutput.toLowerCase();
            boolean ans = clue.cond;
            int amount = clue.num;
            if (ans) {
                if (amount > 0) {
                    boolean isCorrect =
                        loweredOutput.contains(Integer.toString(amount))
                         && loweredOutput.contains("yes");

                    if (isCorrect) {
                        return CheckResult.correct();
                    } else {

                        String rightOutput =
                            "Yes, I can make that amount of coffee" +
                                " (and even " + amount + " more than that)";

                        if (clue.showTests) {
                            return new CheckResult(false,
                                "Your output:\n" +
                                    userOutput +
                                    "\nRight output:\n" +
                                    rightOutput);
                        } else {
                            return CheckResult.wrong("");
                        }
                    }
                }

                String rightOutput =
                    "Yes, I can make that amount of coffee";

                if (loweredOutput.equals(rightOutput.toLowerCase())) {
                    return CheckResult.correct();
                } else {
                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                                userOutput +
                                "\nRight output:\n" +
                                rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }

            } else {
                boolean cond1 = loweredOutput.contains("no");
                boolean cond2 = loweredOutput.contains(Integer.toString(amount));

                if (cond1 && cond2) {
                    return CheckResult.correct();
                } else {

                    String rightOutput = "No, I can make only " +
                        amount +" cup(s) of coffee";

                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                            userOutput +
                            "\nRight output:\n" +
                            rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }
            }
        }
    }
  learner_created: false
- name: src/machine/calculator/Test.java
  visible: true
  text: |
    package machine.calculator;

    import java.util.HashMap;
    import java.util.List;
    import java.util.Map;

    public class Test {
        private final int water = 200;
        private final int milk = 50;
        private final int coffeeBeans = 15;

        private Map<String,Integer> calculator(int amount_coffee){
            int  amount_water = amount_coffee * water;
            int amount_milk = amount_coffee * milk;
            int amount_coffeeBeans = amount_coffee * coffeeBeans;

            Map<String,Integer> amountOfIngredients = new HashMap<>();

            amountOfIngredients.put("amount_coffee",amount_coffee);
            amountOfIngredients.put("milk",amount_milk);
            amountOfIngredients.put("water",amount_water);
            amountOfIngredients.put("coffeeBeans",amount_coffeeBeans);

            return amountOfIngredients;


        }

        public void print(int amount_coffee){
            Map<String,Integer> amountOfIngredients = calculator(amount_coffee);

            System.out.printf("For %d cups of coffee you will need:\n",amountOfIngredients.get("amount_coffee"));
            System.out.println(amountOfIngredients.get("water") + " ml of water");
            System.out.println( amountOfIngredients.get("milk") +" ml of milk");
            System.out.println( amountOfIngredients.get("coffeeBeans") + " g of coffee beans");


        }





    }
  learner_created: true
- name: src/machine/main/CoffeeMachine.java
  visible: true
  text: |
    package machine;

    public class CoffeeMachine {
        public static void main(String[] args) {

            System.out.println("Starting to make a coffee\n" +
                    "Grinding coffee beans\n" +
                    "Boiling water\n" +
                    "Mixing boiled water with crushed coffee beans\n" +
                    "Pouring coffee into the cup\n" +
                    "Pouring some milk into the cup\n" +
                    "Coffee is ready!");
            char c = '1'+'3';
            System.out.println(c);
        }
    }
  learner_created: false
- name: src/machine/coffe/Coffee.java
  visible: true
  learner_created: true
- name: src/machine/calculator/Calculator.java
  visible: true
  learner_created: true
- name: src/machine/main/Main.java
  visible: true
  learner_created: true
- name: src/machine/CoffeeMachine.java
  visible: true
  text: |
    package machine;

    import machine.calculator.Test;

    import java.util.Calendar;
    import java.util.Scanner;

    public class CoffeeMachine {
        static final private Scanner sc = new Scanner(System.in);
        public static void main(String[] args) {
            Test test = new Test();
            System.out.println("Write how many cups of coffee you will need: ");
            int count_coffee = sc.nextInt();
            test.print(count_coffee);


        }


    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/33/stages/177/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 01 Aug 2021 16:25:03 UTC
record: 3
